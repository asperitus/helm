apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "lightningd.fullname" . }}
  labels:
    app: {{ include "lightningd.name" . }}
    chart: {{ include "lightningd.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "lightningd.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "lightningd.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-bitcoind
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'for i in {1..60}; do sleep 1; if bitcoin-cli -testnet -rpcconnect=bitcoind -rpcuser=rpcuser -rpcpassword=rpcpassword echo hello; then exit 0; fi; done; exit 1']
      containers:
        - name: {{ .Chart.Name }}
          args:
            - --bitcoin-rpcconnect=bitcoind
            - --bitcoin-rpcuser=rpcuser
            - --bitcoin-rpcpassword=rpcpassword
            - --network=testnet
            - --alias=myawesomenode
            - --log-level=debug
          env:
            - name: EXPOSE_TCP
              value: "true"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: rpc
              containerPort: 9835 #{{ .Values.service.rpcPort }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: rpc
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: rpc
            initialDelaySeconds: 30
            periodSeconds: 20
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: rpc
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: rpc
          volumeMounts:
            - name: data
              mountPath: /root/.lightning
            # - name: bitcoin-data
            #   mountPath: /etc/bitcoin
          resources:
{{ toYaml .Values.resources | indent 12 }}
      #
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.name | default (include "lightningd.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
